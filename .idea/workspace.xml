<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AnalysisUIOptions">
    <option name="ANALYZE_TEST_SOURCES" value="false" />
    <option name="CUSTOM_SCOPE_NAME" value="controllers" />
  </component>
  <component name="ArtifactsWorkspaceSettings">
    <artifacts-to-build>
      <artifact name="online-store-project:war exploded" />
    </artifacts-to-build>
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="81478867-94a0-4732-909c-41a806607478" name="Changes" comment="Fixed order completion bug (could not set order complete time). Fixed changing user address and personal data (algorithm ignored all requests when client wanted to delete certain piece of information, such as email, postal code etc.)">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/panov/store/configuration/WebConfiguration.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/panov/store/configuration/WebConfiguration.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/panov/store/utils/Constants.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/panov/store/utils/Constants.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Interface" />
        <option value="Enum" />
        <option value="AnnotationType" />
        <option value="HTTP Request" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;history&quot;: [
    {
      &quot;state&quot;: &quot;OPEN&quot;,
      &quot;assignee&quot;: &quot;maksym-panov&quot;
    },
    {
      &quot;state&quot;: &quot;OPEN&quot;,
      &quot;assignee&quot;: &quot;maksym-panov&quot;,
      &quot;author&quot;: &quot;maksym-panov&quot;
    }
  ],
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;maksym-panov&quot;,
    &quot;author&quot;: &quot;maksym-panov&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">
    <option name="selectedUrlAndAccountId">
      <UrlAndAccount>
        <option name="accountId" value="91e2280a-8d64-435d-a66c-32d49cba593b" />
        <option name="url" value="https://github.com/maksym-panov/online-store-project.git" />
      </UrlAndAccount>
    </option>
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="jar://$MAVEN_REPOSITORY$/io/jsonwebtoken/jjwt-api/0.11.5/jjwt-api-0.11.5-sources.jar!/io/jsonwebtoken/JwtParserBuilder.java" root0="SKIP_INSPECTION" />
  </component>
  <component name="LogFilters">
    <option name="FILTER_ERRORS" value="false" />
    <option name="FILTER_WARNINGS" value="false" />
    <option name="FILTER_INFO" value="true" />
    <option name="FILTER_DEBUG" value="true" />
    <option name="CUSTOM_FILTER" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="MavenImportPreferences">
    <option name="importingSettings">
      <MavenImportingSettings>
        <option name="workspaceImportEnabled" value="true" />
      </MavenImportingSettings>
    </option>
  </component>
  <component name="NamedScopeManager">
    <scope name="controllers" pattern="src:com.panov.store.controllers.*" />
  </component>
  <component name="ProjectId" id="2M09vKif4xko9fEh799rM4y3Xeu" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/maksym/Desktop/online-store-project/src/test/resources/META-INF&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
    &quot;service.view.auto.scroll.to.source&quot;: &quot;true&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settings.project.maven.repository.indices&quot;,
    &quot;spring.configuration.checksum&quot;: &quot;eca60a85c5426f4586497142760dc9c6&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;postgresql&quot;
    ],
    &quot;com.intellij.ide.scratch.ScratchImplUtil$2/New Scratch File&quot;: [
      &quot;HTTP Request&quot;
    ]
  }
}</component>
  <component name="RecentsManager">
    <key name="CreateClassDialog.RecentsKey">
      <recent name="com.panov.store.dto" />
      <recent name="com.panov.store.configuration" />
      <recent name="com.panov.store.exceptions" />
      <recent name="com.panov.store.model" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/test/resources/META-INF" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/main/resources" />
      <recent name="$PROJECT_DIR$/src/main/resources/database" />
      <recent name="$PROJECT_DIR$/src/main/webapp" />
      <recent name="$PROJECT_DIR$/src/main/resources/META-INF" />
      <recent name="$PROJECT_DIR$/src/main/resources/config" />
    </key>
    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
      <recent name="com.panov.store.dao" />
    </key>
  </component>
  <component name="RunManager" selected="Tomcat Server.Tomcat 10">
    <configuration name="com.panov.store.configuration.Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.panov.store.configuration.Main" />
      <module name="online-store-project" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.panov.store.jwt.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="All in Requests" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" path="$PROJECT_DIR$/src/main/java/com/panov/store/configuration/Requests.http">
      <method v="2" />
    </configuration>
    <configuration name="Requests | #1" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/src/main/java/com/panov/store/configuration/Requests.http" requestIdentifier="#1" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="All in online-store-project" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="online-store-project" />
      <option name="PACKAGE_NAME" value="" />
      <option name="TEST_OBJECT" value="package" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="java in online-store-project" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="online-store-project" />
      <option name="TEST_OBJECT" value="directory" />
      <dir value="$PROJECT_DIR$/src/test/java" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Tomcat 10" type="#com.intellij.j2ee.web.tomcat.TomcatRunConfigurationFactory" factoryName="Local" APPLICATION_SERVER_NAME="Tomcat 10.0.27" ALTERNATIVE_JRE_ENABLED="false">
      <option name="OPEN_IN_BROWSER" value="false" />
      <option name="UPDATING_POLICY" value="restart-server" />
      <deployment>
        <artifact name="online-store-project:war exploded">
          <settings>
            <option name="CONTEXT_PATH" value="" />
          </settings>
        </artifact>
      </deployment>
      <server-settings>
        <option name="BASE_DIRECTORY_NAME" value="2e67bd94-9fca-4724-87d6-9a647eb14659" />
      </server-settings>
      <predefined_log_file enabled="true" id="Tomcat" />
      <predefined_log_file enabled="true" id="Tomcat Catalina" />
      <predefined_log_file id="Tomcat Manager" />
      <predefined_log_file id="Tomcat Host Manager" />
      <predefined_log_file id="Tomcat Localhost Access" />
      <RunnerSettings RunnerId="Debug">
        <option name="DEBUG_PORT" value="53381" />
      </RunnerSettings>
      <ConfigurationWrapper VM_VAR="JAVA_OPTS" RunnerId="Cover">
        <option name="USE_ENV_VARIABLES" value="true" />
        <STARTUP>
          <option name="USE_DEFAULT" value="true" />
          <option name="SCRIPT" value="" />
          <option name="VM_PARAMETERS" value="" />
          <option name="PROGRAM_PARAMETERS" value="" />
        </STARTUP>
        <SHUTDOWN>
          <option name="USE_DEFAULT" value="true" />
          <option name="SCRIPT" value="" />
          <option name="VM_PARAMETERS" value="" />
          <option name="PROGRAM_PARAMETERS" value="" />
        </SHUTDOWN>
      </ConfigurationWrapper>
      <ConfigurationWrapper VM_VAR="JAVA_OPTS" RunnerId="Debug">
        <option name="USE_ENV_VARIABLES" value="true" />
        <STARTUP>
          <option name="USE_DEFAULT" value="true" />
          <option name="SCRIPT" value="" />
          <option name="VM_PARAMETERS" value="" />
          <option name="PROGRAM_PARAMETERS" value="" />
        </STARTUP>
        <SHUTDOWN>
          <option name="USE_DEFAULT" value="true" />
          <option name="SCRIPT" value="" />
          <option name="VM_PARAMETERS" value="" />
          <option name="PROGRAM_PARAMETERS" value="" />
        </SHUTDOWN>
      </ConfigurationWrapper>
      <ConfigurationWrapper VM_VAR="JAVA_OPTS" RunnerId="Profile">
        <option name="USE_ENV_VARIABLES" value="true" />
        <STARTUP>
          <option name="USE_DEFAULT" value="true" />
          <option name="SCRIPT" value="" />
          <option name="VM_PARAMETERS" value="" />
          <option name="PROGRAM_PARAMETERS" value="" />
        </STARTUP>
        <SHUTDOWN>
          <option name="USE_DEFAULT" value="true" />
          <option name="SCRIPT" value="" />
          <option name="VM_PARAMETERS" value="" />
          <option name="PROGRAM_PARAMETERS" value="" />
        </SHUTDOWN>
      </ConfigurationWrapper>
      <ConfigurationWrapper VM_VAR="JAVA_OPTS" RunnerId="Run">
        <option name="USE_ENV_VARIABLES" value="true" />
        <STARTUP>
          <option name="USE_DEFAULT" value="true" />
          <option name="SCRIPT" value="" />
          <option name="VM_PARAMETERS" value="" />
          <option name="PROGRAM_PARAMETERS" value="" />
        </STARTUP>
        <SHUTDOWN>
          <option name="USE_DEFAULT" value="true" />
          <option name="SCRIPT" value="" />
          <option name="VM_PARAMETERS" value="" />
          <option name="PROGRAM_PARAMETERS" value="" />
        </SHUTDOWN>
      </ConfigurationWrapper>
      <method v="2">
        <option name="Make" enabled="true" />
        <option name="BuildArtifacts" enabled="true">
          <artifact name="online-store-project:war exploded" />
        </option>
      </method>
    </configuration>
    <list>
      <item itemvalue="Application.com.panov.store.configuration.Main" />
      <item itemvalue="HTTP Request.All in Requests" />
      <item itemvalue="HTTP Request.Requests | #1" />
      <item itemvalue="JUnit.java in online-store-project" />
      <item itemvalue="JUnit.All in online-store-project" />
      <item itemvalue="Tomcat Server.Tomcat 10" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.java in online-store-project" />
        <item itemvalue="HTTP Request.Requests | #1" />
        <item itemvalue="HTTP Request.All in Requests" />
        <item itemvalue="Application.com.panov.store.configuration.Main" />
        <item itemvalue="JUnit.All in online-store-project" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="SpringBeansView">
    <option name="beanDetailsProportion" value="0.3" />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="81478867-94a0-4732-909c-41a806607478" name="Changes" comment="" />
      <created>1676893861837</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1676893861837</updated>
      <workItem from="1676893862885" duration="11072000" />
      <workItem from="1677048797754" duration="643000" />
      <workItem from="1677175426323" duration="872000" />
      <workItem from="1677247049395" duration="1093000" />
      <workItem from="1677688042109" duration="25000" />
      <workItem from="1677776669507" duration="5597000" />
      <workItem from="1677867384966" duration="709000" />
      <workItem from="1677868119802" duration="2960000" />
      <workItem from="1678097827719" duration="23604000" />
      <workItem from="1678170562103" duration="1000" />
      <workItem from="1678189321697" duration="57795000" />
      <workItem from="1678438815180" duration="79269000" />
      <workItem from="1678707975938" duration="22774000" />
      <workItem from="1678854046804" duration="947000" />
      <workItem from="1679308604320" duration="1569000" />
      <workItem from="1679310180924" duration="17401000" />
      <workItem from="1679398085306" duration="13129000" />
      <workItem from="1680429682352" duration="765000" />
      <workItem from="1680433959281" duration="3859000" />
      <workItem from="1680446110286" duration="21230000" />
      <workItem from="1680683718234" duration="80342000" />
      <workItem from="1681298436359" duration="133000" />
      <workItem from="1685266455989" duration="413000" />
      <workItem from="1686389547751" duration="3427000" />
      <workItem from="1687529824945" duration="66963000" />
      <workItem from="1687891250437" duration="457000" />
      <workItem from="1687945585058" duration="2826000" />
    </task>
    <task id="LOCAL-00001" summary="Initial commit">
      <created>1676894430878</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1676894430878</updated>
    </task>
    <task id="LOCAL-00002" summary="Added core dependencies to the pom.xml file">
      <created>1676895559805</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1676895559805</updated>
    </task>
    <task id="LOCAL-00003" summary="Created a model of an application database&#10;and wrote the table-creating script">
      <created>1676919711111</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1676919711111</updated>
    </task>
    <task id="LOCAL-00004" summary="1. Created initial package structure.&#10;2. Added entity classes to the &#10;com.panov.store.model package.&#10;3. Created the DAO interface.">
      <created>1676921367163</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1676921367163</updated>
    </task>
    <task id="LOCAL-00005" summary="1. Fully replaced previous database structure with much more normalized one.&#10;2. Added Lombok to the project.&#10;3. Added new SQL script.&#10;4. Basically filled entities with fields.&#10;&#10;-- Next step is to use Hibernate to connect all the entities">
      <created>1677781188272</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1677781188272</updated>
    </task>
    <task id="LOCAL-00006" summary="1. Started integration of Hibernate to the domain model classes such as User and Product.&#10;2. Upgraded enumerations Access and Status so they are now have AttributeConverters that convert enum values to database values 'U', 'M' etc. and back.">
      <created>1677871081471</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1677871081471</updated>
    </task>
    <task id="LOCAL-00007" summary="This time I have done:&#10;1. Switched from hibernate.properties and SessionFactory to persistence.xml and EntityManager because JPA is more compatible than Hibernate.&#10;2. Refactored database, deleted Region table, deleted typeUnitId from TypeUnit table, worked with constraints.&#10;3. Completed implementing Domain Model classes, overrided essential methods from Object class and added JPA/Hibernate annotations.&#10;4. Have tested if everything works fine.">
      <created>1678193287724</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1678193287724</updated>
    </task>
    <task id="LOCAL-00008" summary="Web and DI configuration + DAO implementation&#10;&#10;1. Spring context configuration (initial) is done.&#10;2. Spring WebMvc configuration (initial) is done.&#10;3. Created bean for EntityManagerFactory.&#10;4. Implemented UserDAO.&#10;5. Implemented OrderDAO.&#10;6. Implemented ProductDAO.&#10;7. Implemented UnregisteredCustomerDAO.">
      <created>1678201346320</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1678201346320</updated>
    </task>
    <task id="LOCAL-00009" summary="Basic controllers, services and exception handlers.&#10;1. Created a skeleton of the service layer (UserService, ProductService etc.)&#10;2. Created a skeleton of the controller layer (UserController etc.)&#10;3. Created &quot;NotFound&quot; exception classes for all entities (maybe in future I will make only one &quot;NotFoundException&quot; class).&#10;4. Basically implemented advisor classes for all the entities.&#10;5. Created REST API endpoints for all the entities, such as &quot;/users&quot;, &quot;/users/{id}&quot;, &quot;product&quot; etc and tested them working.&#10;6. Used @JsonIgnoreProperties to control Hibernate relations view in ResponseEntities&#10;7. Removed @AllArgsConstructor annotations from model classes.">
      <created>1678295372673</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1678295372673</updated>
    </task>
    <task id="LOCAL-00010" summary="GET method endpoints provided. Search by product name, phone number of user and unregistered user, email of user implemented.&#10;1. Made changes in DAO interface and now we left with only one method that can find entities by column (or even columns).&#10;2. Service classes now have methods to find list of all entities and list of entities with some constraint (product by product name, user by phone etc.)&#10;3. Created class ListUtils with static method '''Java makeCut(List&lt;T&gt; list, Integer quantity, Integer offset)''' to handle pagination type requests.&#10;&#10;4. Provided endpoints:&#10;/users&#10;/users?quantity={integer}&amp;offset={integer}&#10;/users (+ phone number or email in the request body)&#10;/users/{id}&#10;&#10;/unregistered_customers&#10;/unregistered_customers?quantity={integer}&amp;offset={integer}&#10;/unregistered_customers (+ phone number in the request body)&#10;/unregistered_customers/{id}&#10;&#10;/products&#10;/products?quantity={integer}&amp;offset={integer}&#10;/products (+ part of product name)&#10;/products/{id}&#10;&#10;/orders&#10;/orders?quantity={integer}&amp;offset={integer}&amp;user={userId}&amp;uc={unregisteredCustomerId}&#10;/orders/{id}">
      <created>1678379278210</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1678379278210</updated>
    </task>
    <task id="LOCAL-00011" summary="1. Validation annotations for model classes. &#10;2. ProductType objects access via api. &#10;3. Wrapped in transactions create, update and delete operations in the DAO layer. &#10;4. Created ExceptionBody class for wrapping custom exceptions and send to user in JSON-format.">
      <created>1678450586402</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1678450586403</updated>
    </task>
    <task id="LOCAL-00012" summary="1. Fully implemented CRUD for Product class.&#10;2. Provided validation of fields for ALL model classes.&#10;3. Provided sending validation verdicts to the client.&#10;4. Provided exception handling for Product and sending error message objects to the Client via @ExceptionHandler.&#10;5. In DAO changed delete method so now we should provide only the ID of the entity to delete it.&#10;6. Started implementing DTO classes. Fully integrated ProductDTO class into the Product API so that in the ProductController Product objects are being mapped to ProductDTO objects and vice versa.&#10;7. Also changed package structure so now 'exceptions' package contains 'products', 'orders' et cetera sub-packages and also Advisor classes.">
      <created>1678474011830</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1678474011830</updated>
    </task>
    <task id="LOCAL-00013" summary="Full CRUD, Exception optimisation, Password encoder, Check the uniqueness of parameters.&#10;&#10;1. Completed implementing CRUD for each model entity.&#10;2. Added check for parameter uniqueness to the ProductService, UserService, ProductTypeService classes.&#10;3. Created DTO classes to communicate with clients. DTO classes are used only in @Controller classes and are not being used deeply (in service or dao).&#10;4. Optimized all the model exceptions into 4 classes that extend ResourceException class - ResourceNotFoundException, ResourceNotCreatedException, ResourceNotUpdatedException, ResourceNotDeletedException classes.&#10;5. NotCreated and NotUpdated have fields Map&lt;String, String&gt; and BindingResult to store exception situations causes which the application sends to the client using ControllerAdvisor class' methods (all the advisors are now concentrated in one ControllerAdvisor class because of changes described in paragraph #4).&#10;6. Added password encoder and used it in the UserController#createUser method.">
      <created>1678547182700</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1678547182700</updated>
    </task>
    <task id="LOCAL-00014" summary="Unit testing DAO layer&#10;1. 100% tested ProductTypeRepository&#10;2. 100% tested ProductRepository&#10;3. 100% tested UserRepository&#10;4. 100% tested UnregisteredCustomerRepository&#10;&#10;TODO: add DeliveryTypeRepository&#10;TODO: test DeliveryTypeRepository&#10;TODO: test OrderRepository">
      <created>1678647525092</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1678647525092</updated>
    </task>
    <task id="LOCAL-00015" summary="Solved persisting OrderProducts issue.&#10;Fully completed unit testing DAO layer.">
      <created>1679338090387</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1679338090387</updated>
    </task>
    <task id="LOCAL-00016" summary="Added code that handles useless relationships (for example relationship OrderProducts &lt;-&gt; Product. When we want to delete OrderProducts object, it anyway remains in the DB because Hibernate sees that there is one Product object that has a relation to this OrderProducts object)&#10;Removed possibility to delete User, UnregisteredCustomer, Order, Product records from the DB, because the possibility of deletion of these entities is almost useless but despite this, there will be a lot of problems with &quot;Deletion logic&quot; in the future. So just as almost everywhere we won't have an ability to delete entities. Yet...">
      <created>1679420482012</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1679420482012</updated>
    </task>
    <task id="LOCAL-00017" summary="Added code that handles useless relationships (for example relationship OrderProducts &lt;-&gt; Product. When we want to delete OrderProducts object, it anyway remains in the DB because Hibernate sees that there is one Product object that has a relation to this OrderProducts object)&#10;Removed possibility to delete User, UnregisteredCustomer, Order, Product records from the DB, because the possibility of deletion of these entities is almost useless but despite this, there will be a lot of problems with &quot;Deletion logic&quot; in the future. So just as almost everywhere we won't have an ability to delete entities. Yet...">
      <created>1679420522579</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1679420522579</updated>
    </task>
    <task id="LOCAL-00018" summary="Provided security, login, registration, password encoding method protection, authorities by user ID, added the total sum for Order and OrderProducts objects and changed DB schema to correspond these changes.">
      <created>1680892911101</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1680892911101</updated>
    </task>
    <task id="LOCAL-00019" summary="Provided documentation for each class of the application.">
      <created>1681055232763</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1681055232763</updated>
    </task>
    <task id="LOCAL-00020" summary="Replaced previous security system with new JWT based one.&#10;Added possibility of login and register (after success client&#10;receives a JWT token that he can use to access endpoints that he is allowed to visit in accordance with the account permissions).">
      <created>1687890990833</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1687890990833</updated>
    </task>
    <task id="LOCAL-00021" summary="Fixed order completion bug (could not set order complete time). Fixed changing user address and personal data (algorithm ignored all requests when client wanted to delete certain piece of information, such as email, postal code etc.)">
      <created>1687947653816</created>
      <option name="number" value="00021" />
      <option name="presentableId" value="LOCAL-00021" />
      <option name="project" value="LOCAL" />
      <updated>1687947653816</updated>
    </task>
    <option name="localTasksCounter" value="22" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Initial commit" />
    <MESSAGE value="Added core dependencies to the pom.xml file" />
    <MESSAGE value="Created a model of an application database&#10;and wrote the table-creating script" />
    <MESSAGE value="1. Created initial package structure.&#10;2. Added entity classes to the &#10;com.panov.store.model package.&#10;3. Created the DAO interface." />
    <MESSAGE value="1. Fully replaced previous database structure with much more normalized one.&#10;2. Added Lombok to the project.&#10;3. Added new SQL script.&#10;4. Basically filled entities with fields.&#10;&#10;-- Next step is to use Hibernate to connect all the entities" />
    <MESSAGE value="1. Started integration of Hibernate to the domain model classes such as User and Product.&#10;2. Upgraded enumerations Access and Status so they are now have AttributeConverters that convert enum values to database values 'U', 'M' etc. and back." />
    <MESSAGE value="This time I have done:&#10;1. Switched from hibernate.properties and SessionFactory to persistence.xml and EntityManager because JPA is more compatible than Hibernate.&#10;2. Refactored database, deleted Region table, deleted typeUnitId from TypeUnit table, worked with constraints.&#10;3. Completed implementing Domain Model classes, overrided essential methods from Object class and added JPA/Hibernate annotations.&#10;4. Have tested if everything works fine." />
    <MESSAGE value="Web and DI configuration + DAO implementation&#10;&#10;1. Spring context configuration (initial) is done.&#10;2. Spring WebMvc configuration (initial) is done.&#10;3. Created bean for EntityManagerFactory.&#10;4. Implemented UserDAO.&#10;5. Implemented OrderDAO.&#10;6. Implemented ProductDAO.&#10;7. Implemented UnregisteredCustomerDAO." />
    <MESSAGE value="Basic controllers, services and exception handlers.&#10;1. Created a skeleton of the service layer (UserService, ProductService etc.)&#10;2. Created a skeleton of the controller layer (UserController etc.)&#10;3. Created &quot;NotFound&quot; exception classes for all entities (maybe in future I will make only one &quot;NotFoundException&quot; class).&#10;4. Basically implemented advisor classes for all the entities.&#10;5. Created REST API endpoints for all the entities, such as &quot;/users&quot;, &quot;/users/{id}&quot;, &quot;product&quot; etc and tested them working.&#10;6. Used @JsonIgnoreProperties to control Hibernate relations view in ResponseEntities" />
    <MESSAGE value="Basic controllers, services and exception handlers.&#10;1. Created a skeleton of the service layer (UserService, ProductService etc.)&#10;2. Created a skeleton of the controller layer (UserController etc.)&#10;3. Created &quot;NotFound&quot; exception classes for all entities (maybe in future I will make only one &quot;NotFoundException&quot; class).&#10;4. Basically implemented advisor classes for all the entities.&#10;5. Created REST API endpoints for all the entities, such as &quot;/users&quot;, &quot;/users/{id}&quot;, &quot;product&quot; etc and tested them working.&#10;6. Used @JsonIgnoreProperties to control Hibernate relations view in ResponseEntities&#10;7. Removed @AllArgsConstructor annotations from model classes." />
    <MESSAGE value="GET method endpoints provided. Search by product name, phone number of user and unregistered user, email of user implemented.&#10;1. Made changes in DAO interface and now we left with only one method that can find entities by column (or even columns).&#10;2. Service classes now have methods to find list of all entities and list of entities with some constraint (product by product name, user by phone etc.)&#10;3. Created class ListUtils with static method '''Java makeCut(List&lt;T&gt; list, Integer quantity, Integer offset)''' to handle pagination type requests.&#10;&#10;4. Provided endpoints:&#10;/users&#10;/users?quantity={integer}&amp;offset={integer}&#10;/users (+ phone number or email in the request body)&#10;/users/{id}&#10;&#10;/unregistered_customers&#10;/unregistered_customers?quantity={integer}&amp;offset={integer}&#10;/unregistered_customers (+ phone number in the request body)&#10;/unregistered_customers/{id}&#10;&#10;/products&#10;/products?quantity={integer}&amp;offset={integer}&#10;/products (+ part of product name)&#10;/products/{id}&#10;&#10;/orders&#10;/orders?quantity={integer}&amp;offset={integer}&amp;user={userId}&amp;uc={unregisteredCustomerId}&#10;/orders/{id}" />
    <MESSAGE value="1. Validation annotations for model classes. &#10;2. ProductType objects access via api. &#10;3. Wrapped in transactions create, update and delete operations in the DAO layer. &#10;4. Created ExceptionBody class for wrapping custom exceptions and send to user in JSON-format." />
    <MESSAGE value="1. Fully implemented CRUD for Product class.&#10;2. Provided validation of fields for ALL model classes.&#10;3. Provided sending validation verdicts to the client.&#10;4. Provided exception handling for Product and sending error message objects to the Client via @ExceptionHandler.&#10;5. In DAO changed delete method so now we should provide only the ID of the entity to delete it.&#10;6. Started implementing DTO classes. Fully integrated ProductDTO class into the Product API so that in the ProductController Product objects are being mapped to ProductDTO objects and vice versa.&#10;7. Also changed package structure so now 'exceptions' package contains 'products', 'orders' et cetera sub-packages and also Advisor classes." />
    <MESSAGE value="Full CRUD, Exception optimisation, Password encoder, Check the uniqueness of parameters.&#10;&#10;1. Completed implementing CRUD for each model entity.&#10;2. Added check for parameter uniqueness to the ProductService, UserService, ProductTypeService classes.&#10;3. Created DTO classes to communicate with clients. DTO classes are used only in @Controller classes and are not being used deeply (in service or dao).&#10;4. Optimized all the model exceptions into 4 classes that extend ResourceException class - ResourceNotFoundException, ResourceNotCreatedException, ResourceNotUpdatedException, ResourceNotDeletedException classes.&#10;5. NotCreated and NotUpdated have fields Map&lt;String, String&gt; and BindingResult to store exception situations causes which the application sends to the client using ControllerAdvisor class' methods (all the advisors are now concentrated in one ControllerAdvisor class because of changes described in paragraph #4).&#10;6. Added password encoder and used it in the UserController#createUser method." />
    <MESSAGE value="Unit testing DAO layer&#10;1. 100% tested ProductTypeRepository&#10;2. 100% tested ProductRepository&#10;3. 100% tested UserRepository&#10;4. 100% tested UnregisteredCustomerRepository&#10;&#10;TODO: add DeliveryTypeRepository&#10;TODO: test DeliveryTypeRepository&#10;TODO: test OrderRepository" />
    <MESSAGE value="Solved persisting OrderProducts issue.&#10;Fully completed unit testing DAO layer." />
    <MESSAGE value="Added code that handles useless relationships (for example relationship OrderProducts &lt;-&gt; Product. When we want to delete OrderProducts object, it anyway remains in the DB because Hibernate sees that there is one Product object that has a relation to this OrderProducts object)&#10;Removed possibility to delete User, UnregisteredCustomer, Order, Product records from the DB, because the possibility of deletion of these entities is almost useless but despite this, there will be a lot of problems with &quot;Deletion logic&quot; in the future. So just as almost everywhere we won't have an ability to delete entities. Yet..." />
    <MESSAGE value="Provided security, login, registration, password encoding method protection, authorities by user ID, added total sum for Order objects." />
    <MESSAGE value="Provided security, login, registration, password encoding method protection, authorities by user ID, added the total sum for Order and OrderProducts objects and changed DB schema to correspond these changes." />
    <MESSAGE value="Provided documentation for each class of the application." />
    <MESSAGE value="Replaced previous security system with new JWT based one.&#10;Added possibility of login and register (after success client&#10;receives a JWT token that he can use to access endpoints that he is allowed to visit in accordance with the account permissions)." />
    <MESSAGE value="Fixed order completion bug (could not set order complete time). Fixed changing user address and personal data (algorithm ignored all requests when client wanted to delete certain piece of information, such as email, postal code etc.)" />
    <option name="LAST_COMMIT_MESSAGE" value="Fixed order completion bug (could not set order complete time). Fixed changing user address and personal data (algorithm ignored all requests when client wanted to delete certain piece of information, such as email, postal code etc.)" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>jar://$MAVEN_REPOSITORY$/org/springframework/spring-context/6.0.3/spring-context-6.0.3-sources.jar!/org/springframework/validation/BindingResult.java</url>
          <line>44</line>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/online_store_project$java_in_online_store_project.ic" NAME="java in online-store-project Coverage Results" MODIFIED="1687947311174" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/online_store_project$ProductRepositoryTest.ic" NAME="ProductRepositoryTest Coverage Results" MODIFIED="1678627644532" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
      <FILTER>com.panov.store.dao.*</FILTER>
    </SUITE>
    <SUITE FILE_PATH="coverage/online_store_project$All_in_online_store_project.ic" NAME="All in online-store-project Coverage Results" MODIFIED="1679419499347" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/online_store_project$Tomcat_10.ic" NAME="Tomcat 10 Coverage Results" MODIFIED="1687945934103" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>