<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ArtifactsWorkspaceSettings">
    <artifacts-to-build>
      <artifact name="online-store-project:war exploded" />
    </artifacts-to-build>
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="81478867-94a0-4732-909c-41a806607478" name="Changes" comment="1. Validation annotations for model classes. &#10;2. ProductType objects access via api. &#10;3. Wrapped in transactions create, update and delete operations in the DAO layer. &#10;4. Created ExceptionBody class for wrapping custom exceptions and send to user in JSON-format.">
      <change afterPath="$PROJECT_DIR$/src/main/java/com/panov/store/dto/ProductDTO.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/com/panov/store/exceptions/products/ProductNotCreatedException.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/com/panov/store/exceptions/products/ProductNotDeletedException.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/com/panov/store/exceptions/products/ProductNotUpdatedException.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/panov/store/controllers/ProductController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/panov/store/controllers/ProductController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/panov/store/dao/DAO.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/panov/store/dao/DAO.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/panov/store/dao/OrderRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/panov/store/dao/OrderRepository.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/panov/store/dao/ProductRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/panov/store/dao/ProductRepository.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/panov/store/dao/ProductTypeRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/panov/store/dao/ProductTypeRepository.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/panov/store/dao/UnregisteredCustomerRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/panov/store/dao/UnregisteredCustomerRepository.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/panov/store/dao/UserRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/panov/store/dao/UserRepository.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/panov/store/exceptions/OrderAdvisor.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/panov/store/exceptions/OrderAdvisor.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/panov/store/exceptions/OrderNotFoundException.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/panov/store/exceptions/orders/OrderNotFoundException.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/panov/store/exceptions/ProductAdvisor.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/panov/store/exceptions/ProductAdvisor.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/panov/store/exceptions/ProductNotFoundException.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/panov/store/exceptions/products/ProductNotFoundException.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/panov/store/exceptions/ProductTypeAdvisor.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/panov/store/exceptions/ProductTypeAdvisor.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/panov/store/exceptions/ProductTypeNotFoundException.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/panov/store/exceptions/producttypes/ProductTypeNotFoundException.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/panov/store/exceptions/UnregisteredCustomerAdvisor.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/panov/store/exceptions/UnregisteredCustomerAdvisor.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/panov/store/exceptions/UnregisteredCustomerNotFoundException.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/panov/store/exceptions/unregcustomers/UnregisteredCustomerNotFoundException.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/panov/store/exceptions/UserAdvisor.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/panov/store/exceptions/UserAdvisor.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/panov/store/exceptions/UserNotFoundException.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/panov/store/exceptions/users/UserNotFoundException.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/panov/store/model/Product.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/panov/store/model/Product.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/panov/store/services/OrderService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/panov/store/services/OrderService.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/panov/store/services/ProductService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/panov/store/services/ProductService.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/panov/store/services/ProductTypeService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/panov/store/services/ProductTypeService.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/panov/store/services/UnregisteredCustomerService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/panov/store/services/UnregisteredCustomerService.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/panov/store/services/UserService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/panov/store/services/UserService.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Interface" />
        <option value="Enum" />
        <option value="AnnotationType" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="LogFilters">
    <option name="FILTER_ERRORS" value="false" />
    <option name="FILTER_WARNINGS" value="false" />
    <option name="FILTER_INFO" value="true" />
    <option name="FILTER_DEBUG" value="true" />
    <option name="CUSTOM_FILTER" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="MavenImportPreferences">
    <option name="importingSettings">
      <MavenImportingSettings>
        <option name="workspaceImportEnabled" value="true" />
      </MavenImportingSettings>
    </option>
  </component>
  <component name="ProjectId" id="2M09vKif4xko9fEh799rM4y3Xeu" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "WebServerToolWindowFactoryState": "false",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "project.structure.last.edited": "Project",
    "project.structure.proportion": "0.0",
    "project.structure.side.proportion": "0.0",
    "service.view.auto.scroll.to.source": "true",
    "settings.editor.selected.configurable": "reference.settingsdialog.IDE.editor.colors.Custom File Colors",
    "spring.configuration.checksum": "eca60a85c5426f4586497142760dc9c6",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "postgresql"
    ],
    "com.intellij.ide.scratch.ScratchImplUtil$2/New Scratch File": [
      "HTTP Request"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CreateClassDialog.RecentsKey">
      <recent name="com.panov.store.exceptions" />
      <recent name="com.panov.store.model" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/main/resources/database" />
      <recent name="$PROJECT_DIR$/src/main/resources" />
      <recent name="$PROJECT_DIR$/src/main/webapp" />
      <recent name="$PROJECT_DIR$/src/main/resources/META-INF" />
      <recent name="$PROJECT_DIR$/src/main/resources/config" />
    </key>
  </component>
  <component name="RunManager" selected="Tomcat Server.Tomcat 10">
    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.panov.store.configuration.Main" />
      <module name="online-store-project" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.panov.store.configuration.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Tomcat 10" type="#com.intellij.j2ee.web.tomcat.TomcatRunConfigurationFactory" factoryName="Local" APPLICATION_SERVER_NAME="Tomcat 10.0.27" ALTERNATIVE_JRE_ENABLED="false">
      <option name="OPEN_IN_BROWSER" value="false" />
      <option name="UPDATING_POLICY" value="restart-server" />
      <deployment>
        <artifact name="online-store-project:war exploded">
          <settings>
            <option name="CONTEXT_PATH" value="" />
          </settings>
        </artifact>
      </deployment>
      <server-settings>
        <option name="BASE_DIRECTORY_NAME" value="2e67bd94-9fca-4724-87d6-9a647eb14659" />
      </server-settings>
      <predefined_log_file enabled="true" id="Tomcat" />
      <predefined_log_file enabled="true" id="Tomcat Catalina" />
      <predefined_log_file id="Tomcat Manager" />
      <predefined_log_file id="Tomcat Host Manager" />
      <predefined_log_file id="Tomcat Localhost Access" />
      <RunnerSettings RunnerId="Debug">
        <option name="DEBUG_PORT" value="53381" />
      </RunnerSettings>
      <ConfigurationWrapper VM_VAR="JAVA_OPTS" RunnerId="Cover">
        <option name="USE_ENV_VARIABLES" value="true" />
        <STARTUP>
          <option name="USE_DEFAULT" value="true" />
          <option name="SCRIPT" value="" />
          <option name="VM_PARAMETERS" value="" />
          <option name="PROGRAM_PARAMETERS" value="" />
        </STARTUP>
        <SHUTDOWN>
          <option name="USE_DEFAULT" value="true" />
          <option name="SCRIPT" value="" />
          <option name="VM_PARAMETERS" value="" />
          <option name="PROGRAM_PARAMETERS" value="" />
        </SHUTDOWN>
      </ConfigurationWrapper>
      <ConfigurationWrapper VM_VAR="JAVA_OPTS" RunnerId="Debug">
        <option name="USE_ENV_VARIABLES" value="true" />
        <STARTUP>
          <option name="USE_DEFAULT" value="true" />
          <option name="SCRIPT" value="" />
          <option name="VM_PARAMETERS" value="" />
          <option name="PROGRAM_PARAMETERS" value="" />
        </STARTUP>
        <SHUTDOWN>
          <option name="USE_DEFAULT" value="true" />
          <option name="SCRIPT" value="" />
          <option name="VM_PARAMETERS" value="" />
          <option name="PROGRAM_PARAMETERS" value="" />
        </SHUTDOWN>
      </ConfigurationWrapper>
      <ConfigurationWrapper VM_VAR="JAVA_OPTS" RunnerId="Profile">
        <option name="USE_ENV_VARIABLES" value="true" />
        <STARTUP>
          <option name="USE_DEFAULT" value="true" />
          <option name="SCRIPT" value="" />
          <option name="VM_PARAMETERS" value="" />
          <option name="PROGRAM_PARAMETERS" value="" />
        </STARTUP>
        <SHUTDOWN>
          <option name="USE_DEFAULT" value="true" />
          <option name="SCRIPT" value="" />
          <option name="VM_PARAMETERS" value="" />
          <option name="PROGRAM_PARAMETERS" value="" />
        </SHUTDOWN>
      </ConfigurationWrapper>
      <ConfigurationWrapper VM_VAR="JAVA_OPTS" RunnerId="Run">
        <option name="USE_ENV_VARIABLES" value="true" />
        <STARTUP>
          <option name="USE_DEFAULT" value="true" />
          <option name="SCRIPT" value="" />
          <option name="VM_PARAMETERS" value="" />
          <option name="PROGRAM_PARAMETERS" value="" />
        </STARTUP>
        <SHUTDOWN>
          <option name="USE_DEFAULT" value="true" />
          <option name="SCRIPT" value="" />
          <option name="VM_PARAMETERS" value="" />
          <option name="PROGRAM_PARAMETERS" value="" />
        </SHUTDOWN>
      </ConfigurationWrapper>
      <method v="2">
        <option name="Make" enabled="true" />
        <option name="BuildArtifacts" enabled="true">
          <artifact name="online-store-project:war exploded" />
        </option>
      </method>
    </configuration>
    <list>
      <item itemvalue="Application.Main" />
      <item itemvalue="Tomcat Server.Tomcat 10" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Application.Main" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="SpringBeansView">
    <option name="beanDetailsProportion" value="0.3" />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="81478867-94a0-4732-909c-41a806607478" name="Changes" comment="" />
      <created>1676893861837</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1676893861837</updated>
      <workItem from="1676893862885" duration="11072000" />
      <workItem from="1677048797754" duration="643000" />
      <workItem from="1677175426323" duration="872000" />
      <workItem from="1677247049395" duration="1093000" />
      <workItem from="1677688042109" duration="25000" />
      <workItem from="1677776669507" duration="5597000" />
      <workItem from="1677867384966" duration="709000" />
      <workItem from="1677868119802" duration="2960000" />
      <workItem from="1678097827719" duration="23604000" />
      <workItem from="1678170562103" duration="1000" />
      <workItem from="1678189321697" duration="57795000" />
      <workItem from="1678438815180" duration="23018000" />
    </task>
    <task id="LOCAL-00001" summary="Initial commit">
      <created>1676894430878</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1676894430878</updated>
    </task>
    <task id="LOCAL-00002" summary="Added core dependencies to the pom.xml file">
      <created>1676895559805</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1676895559805</updated>
    </task>
    <task id="LOCAL-00003" summary="Created a model of an application database&#10;and wrote the table-creating script">
      <created>1676919711111</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1676919711111</updated>
    </task>
    <task id="LOCAL-00004" summary="1. Created initial package structure.&#10;2. Added entity classes to the &#10;com.panov.store.model package.&#10;3. Created the DAO interface.">
      <created>1676921367163</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1676921367163</updated>
    </task>
    <task id="LOCAL-00005" summary="1. Fully replaced previous database structure with much more normalized one.&#10;2. Added Lombok to the project.&#10;3. Added new SQL script.&#10;4. Basically filled entities with fields.&#10;&#10;-- Next step is to use Hibernate to connect all the entities">
      <created>1677781188272</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1677781188272</updated>
    </task>
    <task id="LOCAL-00006" summary="1. Started integration of Hibernate to the domain model classes such as User and Product.&#10;2. Upgraded enumerations Access and Status so they are now have AttributeConverters that convert enum values to database values 'U', 'M' etc. and back.">
      <created>1677871081471</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1677871081471</updated>
    </task>
    <task id="LOCAL-00007" summary="This time I have done:&#10;1. Switched from hibernate.properties and SessionFactory to persistence.xml and EntityManager because JPA is more compatible than Hibernate.&#10;2. Refactored database, deleted Region table, deleted typeUnitId from TypeUnit table, worked with constraints.&#10;3. Completed implementing Domain Model classes, overrided essential methods from Object class and added JPA/Hibernate annotations.&#10;4. Have tested if everything works fine.">
      <created>1678193287724</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1678193287724</updated>
    </task>
    <task id="LOCAL-00008" summary="Web and DI configuration + DAO implementation&#10;&#10;1. Spring context configuration (initial) is done.&#10;2. Spring WebMvc configuration (initial) is done.&#10;3. Created bean for EntityManagerFactory.&#10;4. Implemented UserDAO.&#10;5. Implemented OrderDAO.&#10;6. Implemented ProductDAO.&#10;7. Implemented UnregisteredCustomerDAO.">
      <created>1678201346320</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1678201346320</updated>
    </task>
    <task id="LOCAL-00009" summary="Basic controllers, services and exception handlers.&#10;1. Created a skeleton of the service layer (UserService, ProductService etc.)&#10;2. Created a skeleton of the controller layer (UserController etc.)&#10;3. Created &quot;NotFound&quot; exception classes for all entities (maybe in future I will make only one &quot;NotFoundException&quot; class).&#10;4. Basically implemented advisor classes for all the entities.&#10;5. Created REST API endpoints for all the entities, such as &quot;/users&quot;, &quot;/users/{id}&quot;, &quot;product&quot; etc and tested them working.&#10;6. Used @JsonIgnoreProperties to control Hibernate relations view in ResponseEntities&#10;7. Removed @AllArgsConstructor annotations from model classes.">
      <created>1678295372673</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1678295372673</updated>
    </task>
    <task id="LOCAL-00010" summary="GET method endpoints provided. Search by product name, phone number of user and unregistered user, email of user implemented.&#10;1. Made changes in DAO interface and now we left with only one method that can find entities by column (or even columns).&#10;2. Service classes now have methods to find list of all entities and list of entities with some constraint (product by product name, user by phone etc.)&#10;3. Created class ListUtils with static method '''Java makeCut(List&lt;T&gt; list, Integer quantity, Integer offset)''' to handle pagination type requests.&#10;&#10;4. Provided endpoints:&#10;/users&#10;/users?quantity={integer}&amp;offset={integer}&#10;/users (+ phone number or email in the request body)&#10;/users/{id}&#10;&#10;/unregistered_customers&#10;/unregistered_customers?quantity={integer}&amp;offset={integer}&#10;/unregistered_customers (+ phone number in the request body)&#10;/unregistered_customers/{id}&#10;&#10;/products&#10;/products?quantity={integer}&amp;offset={integer}&#10;/products (+ part of product name)&#10;/products/{id}&#10;&#10;/orders&#10;/orders?quantity={integer}&amp;offset={integer}&amp;user={userId}&amp;uc={unregisteredCustomerId}&#10;/orders/{id}">
      <created>1678379278210</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1678379278210</updated>
    </task>
    <task id="LOCAL-00011" summary="1. Validation annotations for model classes. &#10;2. ProductType objects access via api. &#10;3. Wrapped in transactions create, update and delete operations in the DAO layer. &#10;4. Created ExceptionBody class for wrapping custom exceptions and send to user in JSON-format.">
      <created>1678450586402</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1678450586403</updated>
    </task>
    <option name="localTasksCounter" value="12" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Initial commit" />
    <MESSAGE value="Added core dependencies to the pom.xml file" />
    <MESSAGE value="Created a model of an application database&#10;and wrote the table-creating script" />
    <MESSAGE value="1. Created initial package structure.&#10;2. Added entity classes to the &#10;com.panov.store.model package.&#10;3. Created the DAO interface." />
    <MESSAGE value="1. Fully replaced previous database structure with much more normalized one.&#10;2. Added Lombok to the project.&#10;3. Added new SQL script.&#10;4. Basically filled entities with fields.&#10;&#10;-- Next step is to use Hibernate to connect all the entities" />
    <MESSAGE value="1. Started integration of Hibernate to the domain model classes such as User and Product.&#10;2. Upgraded enumerations Access and Status so they are now have AttributeConverters that convert enum values to database values 'U', 'M' etc. and back." />
    <MESSAGE value="This time I have done:&#10;1. Switched from hibernate.properties and SessionFactory to persistence.xml and EntityManager because JPA is more compatible than Hibernate.&#10;2. Refactored database, deleted Region table, deleted typeUnitId from TypeUnit table, worked with constraints.&#10;3. Completed implementing Domain Model classes, overrided essential methods from Object class and added JPA/Hibernate annotations.&#10;4. Have tested if everything works fine." />
    <MESSAGE value="Web and DI configuration + DAO implementation&#10;&#10;1. Spring context configuration (initial) is done.&#10;2. Spring WebMvc configuration (initial) is done.&#10;3. Created bean for EntityManagerFactory.&#10;4. Implemented UserDAO.&#10;5. Implemented OrderDAO.&#10;6. Implemented ProductDAO.&#10;7. Implemented UnregisteredCustomerDAO." />
    <MESSAGE value="Basic controllers, services and exception handlers.&#10;1. Created a skeleton of the service layer (UserService, ProductService etc.)&#10;2. Created a skeleton of the controller layer (UserController etc.)&#10;3. Created &quot;NotFound&quot; exception classes for all entities (maybe in future I will make only one &quot;NotFoundException&quot; class).&#10;4. Basically implemented advisor classes for all the entities.&#10;5. Created REST API endpoints for all the entities, such as &quot;/users&quot;, &quot;/users/{id}&quot;, &quot;product&quot; etc and tested them working.&#10;6. Used @JsonIgnoreProperties to control Hibernate relations view in ResponseEntities" />
    <MESSAGE value="Basic controllers, services and exception handlers.&#10;1. Created a skeleton of the service layer (UserService, ProductService etc.)&#10;2. Created a skeleton of the controller layer (UserController etc.)&#10;3. Created &quot;NotFound&quot; exception classes for all entities (maybe in future I will make only one &quot;NotFoundException&quot; class).&#10;4. Basically implemented advisor classes for all the entities.&#10;5. Created REST API endpoints for all the entities, such as &quot;/users&quot;, &quot;/users/{id}&quot;, &quot;product&quot; etc and tested them working.&#10;6. Used @JsonIgnoreProperties to control Hibernate relations view in ResponseEntities&#10;7. Removed @AllArgsConstructor annotations from model classes." />
    <MESSAGE value="GET method endpoints provided. Search by product name, phone number of user and unregistered user, email of user implemented.&#10;1. Made changes in DAO interface and now we left with only one method that can find entities by column (or even columns).&#10;2. Service classes now have methods to find list of all entities and list of entities with some constraint (product by product name, user by phone etc.)&#10;3. Created class ListUtils with static method '''Java makeCut(List&lt;T&gt; list, Integer quantity, Integer offset)''' to handle pagination type requests.&#10;&#10;4. Provided endpoints:&#10;/users&#10;/users?quantity={integer}&amp;offset={integer}&#10;/users (+ phone number or email in the request body)&#10;/users/{id}&#10;&#10;/unregistered_customers&#10;/unregistered_customers?quantity={integer}&amp;offset={integer}&#10;/unregistered_customers (+ phone number in the request body)&#10;/unregistered_customers/{id}&#10;&#10;/products&#10;/products?quantity={integer}&amp;offset={integer}&#10;/products (+ part of product name)&#10;/products/{id}&#10;&#10;/orders&#10;/orders?quantity={integer}&amp;offset={integer}&amp;user={userId}&amp;uc={unregisteredCustomerId}&#10;/orders/{id}" />
    <MESSAGE value="1. Validation annotations for model classes. &#10;2. ProductType objects access via api. &#10;3. Wrapped in transactions create, update and delete operations in the DAO layer. &#10;4. Created ExceptionBody class for wrapping custom exceptions and send to user in JSON-format." />
    <option name="LAST_COMMIT_MESSAGE" value="1. Validation annotations for model classes. &#10;2. ProductType objects access via api. &#10;3. Wrapped in transactions create, update and delete operations in the DAO layer. &#10;4. Created ExceptionBody class for wrapping custom exceptions and send to user in JSON-format." />
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>