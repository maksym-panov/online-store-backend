---------------
-- POSTGRESQL--
---------------

CREATE TABLE "User" (
    userId INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    phoneNumber CHAR(10) NOT NULL UNIQUE,
    email VARCHAR(80) UNIQUE,
    name VARCHAR(30) NOT NULL,
    lastname VARCHAR(30),
    address VARCHAR(128),
    hashPassword VARCHAR(256) NOT NULL,
    access CHAR(1) NOT NULL CHECK(access IN ('U', 'M', 'A'))
);
-- DROP TABLE "User";

CREATE TABLE UnregisteredCustomer (
    unregisteredCustomerId INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(30) NOT NULL,
    email VARCHAR(80) NOT NULL UNIQUE,
    address VARCHAR(128) NOT NULL
);
-- DROP TABLE UnregisteredCustomer;

CREATE TABLE DeliveryType (
    deliveryTypeId INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(50)
);
-- DROP TABLE DeliveryType;

CREATE TABLE "Order" (
    orderId INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    userId INT REFERENCES "User"(userId) ON DELETE SET NULL,
    unregisteredCustomerId INT REFERENCES UnregisteredCustomer(unregisteredCustomerId) ON DELETE SET NULL,
    deliveryTypeId INT NOT NULL REFERENCES DeliveryType(deliveryTypeId) ON DELETE SET NULL,
    takeTime TIMESTAMP NOT NULL,
    completeTime TIMESTAMP,
    status CHAR(1) NOT NULL CHECK (status IN ('N', 'A', 'P', 'D', 'C')),

    CONSTRAINT CustomerIdentityConstraint CHECK ((userId IS NOT NULL AND unregisteredCustomerId IS NULL) OR (userId IS NULL AND unregisteredCustomerId IS NOT NULL)),
    CONSTRAINT CompletedOrderHasCompleteTime CHECK ((status = 'C' AND completeTime IS NOT NULL) OR status != 'C'),
    CONSTRAINT CompleteDateAfterTakeTime CHECK (completeTime > takeTime)
);
-- DROP TABLE "Order";

CREATE TABLE Product (
    productId INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(128) NOT NULL UNIQUE,
    description VARCHAR(512),
    price DECIMAL(10, 2) NOT NULL,
    quantity INT NOT NULL
);
-- DROP TABLE Product;

CREATE TABLE ProductType (
    productTypeId INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(30)
);
-- DROP TABLE ProductType;

CREATE TABLE CategoryOfProduct (
    categoryOfProductId INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    productId INT NOT NULL REFERENCES Product(productId) ON DELETE CASCADE,
    productTypeId INT NOT NULL REFERENCES ProductType(productTypeId) ON DELETE CASCADE
);
-- DROP TABLE CategoryOfProduct;

CREATE TABLE OrderProducts (
    orderProductsId INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    orderId INT NOT NULL REFERENCES "Order"(orderId) ON DELETE CASCADE,
    productId INT NOT NULL REFERENCES Product(productId) ON DELETE CASCADE,
    quantity INT NOT NULL
);
-- DROP TABLE OrderProducts;